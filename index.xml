<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>自留地</title>
    <link>https://yunfengsay.github.io/</link>
    <description>Recent content on 自留地</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 15 Oct 2018 21:04:40 +0800</lastBuildDate>
    
	<atom:link href="https://yunfengsay.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jison</title>
      <link>https://yunfengsay.github.io/post/jison/</link>
      <pubDate>Mon, 15 Oct 2018 21:04:40 +0800</pubDate>
      
      <guid>https://yunfengsay.github.io/post/jison/</guid>
      <description>jison概述 什么是jison？
在聊jison前我们得先说下bison和flex这两个工具
Flex是一个词法分析器，是unix lex的gnu克隆，作用是把&amp;quot;词&amp;quot;抽象成符号，供程序识别 Bison则是一个文法分析器（也是unix yacc的gnu克隆），语法就是在这里定义，是语言设计的核心 这两巨头不但可以应付复杂的语法处理，也可以拿来制作简单的分析器，如配置文件等  而jison是bison的js实现（Jison generates bottom-up parsers in JavaScript）
jiosn的github地址在这里github，在examples下有很多作者写的demo教程。
jison做了什么 先不直接回答这个问题，我们从一个经典的需求说起 &amp;mdash; “实现一个计算器”
2*(5+2)/3  不是简单的调用下eval这么简单，我们要重头开始审视这个问题，优先级、四则符号、括号，这些就是我们要考虑的东西。
那么如何实现这个需求呢，拆分问题，我们人的思维是擅长把部分合成整体看待从而简化问题，首先拆分第一步
2*(5+2)/3 ----&amp;gt; 2*(5+2) / 3 相当于 let a = 22*(5+2); let b = 3 ; result = a / b (5+2)/3 ---&amp;gt; (5+2) / 3; 相当于 let c = (5+2) ; let d = 3; .....  最后计算， 详细逻辑可以参考别人的这篇文章 解析树及树的遍历
现在我们用jison来实现这个需求
第一步： 安装jison 新建 calculator.jison文件</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://yunfengsay.github.io/about/</link>
      <pubDate>Mon, 15 Oct 2018 21:04:00 +0800</pubDate>
      
      <guid>https://yunfengsay.github.io/about/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>